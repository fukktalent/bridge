/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bridge, BridgeInterface } from "../../contracts/Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ERC20PresetMinterPauser",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "validator_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyRedeemed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainFrom",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainTo",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainFrom",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainTo",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "SwapInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "validator_",
        type: "address",
      },
    ],
    name: "setValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e0238038062001e0283398181016040528101906200003791906200047e565b620000576200004b620002c560201b60201c565b620002cd60201b60201c565b6200008b7f775f04a3cc8ce45eaf99297f9c9791f26c0fbd630ba5cb4fa5320c1aa2fb2e4560001b6200039160201b60201c565b620000bf7f24de7a6aacf7b9c4febc71d131d70bfcb6c15d83088def8bef818b26ce95420b60001b6200039160201b60201c565b620000f37f2669cc4a011a854d5b552393f1d50915516259986b8ef700a0cc9aa33498678060001b6200039160201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001687f85e0ec70863ffaee985998dec51baa08b5468dea6f3223c791f08082dd3ad7ef60001b6200039160201b60201c565b6200019c7f68bfd16b4d7879e85303b2ca211f0b8138de9b727799bac0d7486ab9c97764b160001b6200039160201b60201c565b82600381905550620001d77f4383b2cbcbad1f61006d8e5d142ece220a2e53b553912fcdc749d985d78e585c60001b6200039160201b60201c565b6200020b7ff359c5dd95101f7a4a1515a6f9bfdd3cb5a718fb94fb2f85d85dc884870f591360001b6200039160201b60201c565b81600481905550620002467fc32b6f3187780a47fb51caceedd72430694452ea8ef23464c0bac61d647b881160001b6200039160201b60201c565b6200027a7f41c390d1f0a0790374532a5829f70f04e338536f10388db118a07d3f01187b9b60001b6200039160201b60201c565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620004f0565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003c68262000399565b9050919050565b6000620003da82620003b9565b9050919050565b620003ec81620003cd565b8114620003f857600080fd5b50565b6000815190506200040c81620003e1565b92915050565b6000819050919050565b620004278162000412565b81146200043357600080fd5b50565b60008151905062000447816200041c565b92915050565b6200045881620003b9565b81146200046457600080fd5b50565b60008151905062000478816200044d565b92915050565b600080600080608085870312156200049b576200049a62000394565b5b6000620004ab87828801620003fb565b9450506020620004be8782880162000436565b9350506040620004d18782880162000436565b9250506060620004e48782880162000467565b91505092959194509250565b61190280620005006000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c6578063a7c589dd146100e4578063c0ebb58514610100578063f2fde38b1461011c5761007d565b80631327d3d8146100825780633a5381b51461009e578063715018a6146100bc575b600080fd5b61009c6004803603810190610097919061107b565b610138565b005b6100a661027c565b6040516100b391906110b7565b60405180910390f35b6100c461032a565b005b6100ce6103b2565b6040516100db91906110b7565b60405180910390f35b6100fe60048036038101906100f99190611150565b6103db565b005b61011a60048036038101906101159190611212565b610590565b005b6101366004803603810190610131919061107b565b610b1f565b005b610140610c16565b73ffffffffffffffffffffffffffffffffffffffff1661015e6103b2565b73ffffffffffffffffffffffffffffffffffffffff16146101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab906112fc565b60405180910390fd5b6101e07f2383d6a489478872dddd8a4d5fab2a3336bcbd46207c706e8e638607423a3b5d60001b610c1e565b61020c7fc114e439a7c2bcbc5974f8f34037f2c33aa3272cc597983442ae061d62f4000060001b610c1e565b6102387fa30872403469a8c11ec7eb103ef167b373bf34da9b1eb52a6026163f7d60df2360001b610c1e565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006102aa7f1698fbf5be9c747281d1421be6f96c196c0401d3adc04defa7e9b5e9546a947e60001b610c1e565b6102d67f613f89782eb3d6f34fbc1cc937d499e853973da69361874a95539f29c584ba0960001b610c1e565b6103027ff06e3dc1269186051e83e45af4902cd71e2c8ac3671883257f13c95b7f126ac360001b610c1e565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610332610c16565b73ffffffffffffffffffffffffffffffffffffffff166103506103b2565b73ffffffffffffffffffffffffffffffffffffffff16146103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d906112fc565b60405180910390fd5b6103b06000610c21565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104077f9cb10dade6805c00d5beb5d2988391c1754475a05ab195670ecc4a5e1a5a05cc60001b610c1e565b6104337f4331d00694780c84674ac8dbd4fbfaffbcc70f740f3c388b9d7928bbed629de260001b610c1e565b61045f7fa0a6a232fb888d3433eab8a336e1371a861384d481d89841f70099a331edf12f60001b610c1e565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679033846040518363ffffffff1660e01b81526004016104bc929190611357565b600060405180830381600087803b1580156104d657600080fd5b505af11580156104ea573d6000803e3d6000fd5b5050505061051a7f6428a650e7f862398ef56eb06b62b25da4f1f6274b0b090cead5bca0f40e759960001b610c1e565b6105467fe2afb8f86efa8b6336d4e50c10293d8aeaaa14f6c688e8b855c6ceae5660121a60001b610c1e565b7f8f967eabe9b3511f6a276fc06ee59a6c3bd2f56e398a61cabb5fd6c6753e36d0338460035460045486866040516105839695949392919061139e565b60405180910390a1505050565b6105bc7fb1961f0802000971637771f33b0d3333001d81a7041718008f1e9591bd1da66560001b610c1e565b6105e87f1b8a2f768a186ef66400b305e8d3adb68e1a6c93edbe1e514d28e8f3acc4bcd360001b610c1e565b6106147f2ef4dd8778cca376ecb4ec888dd502a46e82e0cde296809b21e7f6929ea322db60001b610c1e565b6000863360045460035489896040516020016106359695949392919061149e565b6040516020818303038152906040528051906020012090506106797f488ed01f5ee4b2b30d89a7963b33bacb70ae9ba9fca3c1f828eb8b1252652cf160001b610c1e565b6106a57f6f36d5115fa091b46b55abcecbc213e83e2b59dedc668532b8fff06a73ddab9060001b610c1e565b60006106b082610ce5565b90506106de7f3dcdc406e03bcf094a10c99cd953ae87a4845757850366c8eabf6bea9806cf9760001b610c1e565b61070a7feac6d00b6404b2fe16e06703a6c66c83b822306fc0bfd68019926787243f774b60001b610c1e565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661075a86868685610d15909392919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff16146107d3576107a17ff7703b3c7e12f4206376d635245767aee0bf9472f257d54a15f5e37f811427f160001b610c1e565b6040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ff7ff7cc2564f6ec1df01a95bdc7682baa8ac185ed97eaaa46b397f47b62f379200160001b610c1e565b61082b7f8103d9ed4a08bf8b298cd3ca45bbe7a4839e419d2d9af5dc5fc38ea8b1fcd36a60001b610c1e565b6108577f7fceb8d1d319622a8608cd73ebab3de4b720aaac688aa9fe520de2e678241f2f60001b610c1e565b600115156002600083815260200190815260200160002060009054906101000a900460ff161515036108e1576108af7f35520e51f2bd919d3f55c3bb398cabba391d66779b16936aff50c91eaa525cec60001b610c1e565b6040517f1b4e0c3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61090d7fa4a6343954490331342f8224a07fa92bc95d7589173362822993f300532d5d0560001b610c1e565b6109397fcae0a1e15206a817be9dd61edb64afc439ac70d91a036387c98a1dab8d7b005760001b610c1e565b6109657fa3f638d18b2fb1fb2073c02567e566de42f1f77c5762954b2d838f13701db48360001b610c1e565b60016002600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506109bd7f80af671cab056bd191f9c5ccbf7865c2022437f56a0021da0efdd764622c218c60001b610c1e565b6109e97f8e5d6fc22085b0c9e2716308936eb0fd926baa5a82b33fbd974648c523e7a11360001b610c1e565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933896040518363ffffffff1660e01b8152600401610a46929190611357565b600060405180830381600087803b158015610a6057600080fd5b505af1158015610a74573d6000803e3d6000fd5b50505050610aa47fafa058d67c76a3b4708bc71120725fa33fc5deeb40deb4a8eb1c4423dffff3f160001b610c1e565b610ad07fde580e531616dc9eb499e6be040758201ba0aacc7149191f7ccf13c56892dd8760001b610c1e565b7f25803e3d22df83fb456a253ce715ff1a759a75c3a0c6d92264b4f782d49680bd88336004546003548b8b604051610b0d9695949392919061139e565b60405180910390a15050505050505050565b610b27610c16565b73ffffffffffffffffffffffffffffffffffffffff16610b456103b2565b73ffffffffffffffffffffffffffffffffffffffff1614610b9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b92906112fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0190611580565b60405180910390fd5b610c1381610c21565b50565b600033905090565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081604051602001610cf89190611618565b604051602081830303815290604052805190602001209050919050565b6000806000610d2687878787610d40565b91509150610d3381610e4c565b8192505050949350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c1115610d7b576000600391509150610e43565b601b8560ff1614158015610d935750601c8560ff1614155b15610da5576000600491509150610e43565b600060018787878760405160008152602001604052604051610dca949392919061165c565b6020604051602081039080840390855afa158015610dec573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e3a57600060019250925050610e43565b80600092509250505b94509492505050565b60006004811115610e6057610e5f6116a1565b5b816004811115610e7357610e726116a1565b5b03156110155760016004811115610e8d57610e8c6116a1565b5b816004811115610ea057610e9f6116a1565b5b03610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed79061171c565b60405180910390fd5b60026004811115610ef457610ef36116a1565b5b816004811115610f0757610f066116a1565b5b03610f47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3e90611788565b60405180910390fd5b60036004811115610f5b57610f5a6116a1565b5b816004811115610f6e57610f6d6116a1565b5b03610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa59061181a565b60405180910390fd5b600480811115610fc157610fc06116a1565b5b816004811115610fd457610fd36116a1565b5b03611014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100b906118ac565b60405180910390fd5b5b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110488261101d565b9050919050565b6110588161103d565b811461106357600080fd5b50565b6000813590506110758161104f565b92915050565b60006020828403121561109157611090611018565b5b600061109f84828501611066565b91505092915050565b6110b18161103d565b82525050565b60006020820190506110cc60008301846110a8565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6110f7816110d2565b811461110257600080fd5b50565b600081359050611114816110ee565b92915050565b6000819050919050565b61112d8161111a565b811461113857600080fd5b50565b60008135905061114a81611124565b92915050565b60008060006060848603121561116957611168611018565b5b600061117786828701611066565b935050602061118886828701611105565b92505060406111998682870161113b565b9150509250925092565b600060ff82169050919050565b6111b9816111a3565b81146111c457600080fd5b50565b6000813590506111d6816111b0565b92915050565b6000819050919050565b6111ef816111dc565b81146111fa57600080fd5b50565b60008135905061120c816111e6565b92915050565b60008060008060008060c0878903121561122f5761122e611018565b5b600061123d89828a01611066565b965050602061124e89828a01611105565b955050604061125f89828a0161113b565b945050606061127089828a016111c7565b935050608061128189828a016111fd565b92505060a061129289828a016111fd565b9150509295509295509295565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112e660208361129f565b91506112f1826112b0565b602082019050919050565b60006020820190508181036000830152611315816112d9565b9050919050565b6000819050919050565b600061134161133c611337846110d2565b61131c565b61111a565b9050919050565b61135181611326565b82525050565b600060408201905061136c60008301856110a8565b6113796020830184611348565b9392505050565b6113898161111a565b82525050565b611398816110d2565b82525050565b600060c0820190506113b360008301896110a8565b6113c060208301886110a8565b6113cd6040830187611380565b6113da6060830186611380565b6113e7608083018561138f565b6113f460a0830184611380565b979650505050505050565b60008160601b9050919050565b6000611417826113ff565b9050919050565b60006114298261140c565b9050919050565b61144161143c8261103d565b61141e565b82525050565b6000819050919050565b61146261145d8261111a565b611447565b82525050565b60008160801b9050919050565b600061148082611468565b9050919050565b611498611493826110d2565b611475565b82525050565b60006114aa8289611430565b6014820191506114ba8288611430565b6014820191506114ca8287611451565b6020820191506114da8286611451565b6020820191506114ea8285611487565b6010820191506114fa8284611451565b602082019150819050979650505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061156a60268361129f565b91506115758261150e565b604082019050919050565b600060208201905081810360008301526115998161155d565b9050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006115e1601c836115a0565b91506115ec826115ab565b601c82019050919050565b6000819050919050565b61161261160d826111dc565b6115f7565b82525050565b6000611623826115d4565b915061162f8284611601565b60208201915081905092915050565b611647816111dc565b82525050565b611656816111a3565b82525050565b6000608082019050611671600083018761163e565b61167e602083018661164d565b61168b604083018561163e565b611698606083018461163e565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061170660188361129f565b9150611711826116d0565b602082019050919050565b60006020820190508181036000830152611735816116f9565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611772601f8361129f565b915061177d8261173c565b602082019050919050565b600060208201905081810360008301526117a181611765565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061180460228361129f565b915061180f826117a8565b604082019050919050565b60006020820190508181036000830152611833816117f7565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061189660228361129f565b91506118a18261183a565b604082019050919050565b600060208201905081810360008301526118c581611889565b905091905056fea26469706673582212207be127c43bd996539ed8aaba625aef8234161dcef3a6dae634133e3365a3c45564736f6c634300080d0033";

type BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bridge__factory extends ContractFactory {
  constructor(...args: BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: string,
    chainId: BigNumberish,
    swapChainId: BigNumberish,
    validator_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bridge> {
    return super.deploy(
      token,
      chainId,
      swapChainId,
      validator_,
      overrides || {}
    ) as Promise<Bridge>;
  }
  override getDeployTransaction(
    token: string,
    chainId: BigNumberish,
    swapChainId: BigNumberish,
    validator_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      chainId,
      swapChainId,
      validator_,
      overrides || {}
    );
  }
  override attach(address: string): Bridge {
    return super.attach(address) as Bridge;
  }
  override connect(signer: Signer): Bridge__factory {
    return super.connect(signer) as Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeInterface {
    return new utils.Interface(_abi) as BridgeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {
    return new Contract(address, _abi, signerOrProvider) as Bridge;
  }
}
